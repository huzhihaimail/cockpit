buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        //mavenCentral()
        mavenLocal()
        maven { url "http://maven.aliyun.com//nexus/content/groups/public/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.rd.www.muscle'
version = ''
sourceCompatibility = 1.8


repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com//nexus/content/groups/public/" }
    //mavenCentral()
}
war {
    archiveName = "cockpit.war"
}

// version vars
ext {
    springVersion = '4.3.7.RELEASE'
    mybatisPagehelperVersion = '4.0.0'
    HikariCP_version = '2.4.1'
    mybatis_version = '3.3.0'
    mybatis_spring_version = '1.2.3'
    mysql_connector_version = '5.1.37'
    springDataVersion = '2.3.0.RELEASE'
    hbaseVersion = '1.1.3'
    kafkaVersion = '0.9.0.1'
    fastJsonVersion = '1.2.9'
    fluentLoggerVersion = '0.3.3'
    shiroVersion = '1.3.2'
    quartzVersion = '2.2.1'
    swaggerVersion = '2.6.1'

    springCloudVersion = 'Edgware.RELEASE'
}

// 指定项目使用的依赖
dependencies {

    compile "org.springframework:spring-context-support:${springVersion}"

    // web
    compile("org.springframework.boot:spring-boot-starter-web")

    // tomcat
    //runtime('org.springframework.boot:spring-boot-starter-tomcat')

    // aop
    compile("org.springframework.boot:spring-boot-starter-aop")

    // jdbc（事务支持）
    compile("org.springframework.boot:spring-boot-starter-jdbc")

    // datasource pool
    compile("com.zaxxer:HikariCP:${HikariCP_version}")

    // mybatis and mybatis-spring
    compile("org.mybatis:mybatis:${mybatis_version}")
    compile("org.mybatis:mybatis-spring:${mybatis_spring_version}")
    compile("com.github.pagehelper:pagehelper:${mybatisPagehelperVersion}")

    // fastJSON
    compile("com.alibaba:fastjson:$fastJsonVersion")

    // shiro
    compile("org.apache.shiro:shiro-core:${shiroVersion}")
    compile("org.apache.shiro:shiro-spring:${shiroVersion}")

    // quartz
    compile("org.quartz-scheduler:quartz:${quartzVersion}")

    // swagger
    compile("io.springfox:springfox-swagger2:${swaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")

    // HaiHang sdk
    compile files('lib/openDataSdk-1.0.jar')

    // httpclient
    compile('org.apache.httpcomponents:httpclient:4.3.1')

    //apache-commons-io
    compile('org.apache.commons:commons-io:1.3.2')

    //jackson-mapper-asl
    compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')

    // org.apache.poi-poi
    //compile('org.apache.poi:poi:3.17')

    // org.apache.poi-poi-ooxml
    compile('org.apache.poi:poi-ooxml:3.17')

    // org.apache.poi-poi-scratchpad
    compile('org.apache.poi:poi-scratchpad:3.17')

    // org.apache.poi-poi-ooxml-schemas
    compile('org.apache.poi:poi-ooxml-schemas:3.17')

    // org.apache.poi-poi-excelant
    compile('org.apache.poi:poi-excelant:3.17')



    // org.apache.commons-commons-lang3
    compile('org.apache.commons:commons-lang3:3.7')


    // autocompile
    runtime("org.springframework.boot:spring-boot-devtools")

    // database mysql connect
    //runtime("mysql:mysql-connector-java:${mysql_connector_version}")
    runtime("com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8")

    // test
    testCompile(group: 'junit', name: 'junit', version: '4.12')
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
